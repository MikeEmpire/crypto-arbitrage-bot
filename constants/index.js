// SMART CONTRACTS
// https://github.com/CryptoManiacsZone/1inchProtocol/blob/master/contracts/OneSplitAudit.sol

const FILL_ORDER_ABI = {
  constant: false,
  inputs: [
    {
      components: [
        { internalType: "address", name: "makerAddress", type: "address" },
        { internalType: "address", name: "takerAddress", type: "address" },
        {
          internalType: "address",
          name: "feeRecipientAddress",
          type: "address",
        },
        { internalType: "address", name: "senderAddress", type: "address" },
        { internalType: "uint256", name: "makerAssetAmount", type: "uint256" },
        { internalType: "uint256", name: "takerAssetAmount", type: "uint256" },
        { internalType: "uint256", name: "makerFee", type: "uint256" },
        { internalType: "uint256", name: "takerFee", type: "uint256" },
        {
          internalType: "uint256",
          name: "expirationTimeSeconds",
          type: "uint256",
        },
        { internalType: "uint256", name: "salt", type: "uint256" },
        { internalType: "bytes", name: "makerAssetData", type: "bytes" },
        { internalType: "bytes", name: "takerAssetData", type: "bytes" },
        { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
        { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
      ],
      internalType: "struct LibOrder.Order",
      name: "order",
      type: "tuple",
    },
    { internalType: "uint256", name: "takerAssetFillAmount", type: "uint256" },
    { internalType: "bytes", name: "signature", type: "bytes" },
  ],
  name: "fillOrder",
  outputs: [
    {
      components: [
        {
          internalType: "uint256",
          name: "makerAssetFilledAmount",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "takerAssetFilledAmount",
          type: "uint256",
        },
        { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
        { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
        { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
      ],
      internalType: "struct LibFillResults.FillResults",
      name: "fillResults",
      type: "tuple",
    },
  ],
  payable: true,
  stateMutability: "payable",
  type: "function",
};
const ERC_20_ABI = [
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_spender", type: "address" },
      { name: "_value", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", type: "bool" }],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_from", type: "address" },
      { name: "_to", type: "address" },
      { name: "_value", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", type: "bool" }],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", type: "uint8" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ name: "_owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "balance", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_to", type: "address" },
      { name: "_value", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", type: "bool" }],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { name: "_owner", type: "address" },
      { name: "_spender", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  { payable: true, stateMutability: "payable", type: "fallback" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, name: "owner", type: "address" },
      { indexed: true, name: "spender", type: "address" },
      { indexed: false, name: "value", type: "uint256" },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, name: "from", type: "address" },
      { indexed: true, name: "to", type: "address" },
      { indexed: false, name: "value", type: "uint256" },
    ],
    name: "Transfer",
    type: "event",
  },
];

const ONE_SPLIT_ABI = [
  {
    inputs: [
      { internalType: "contract IOneSplit", name: "impl", type: "address" },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
    ],
    name: "ImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  { payable: true, stateMutability: "payable", type: "fallback" },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_AAVE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_BANCOR",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_BDAI",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CHAI",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_COMPOUND",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CURVE_BINANCE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CURVE_COMPOUND",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CURVE_SYNTHETIX",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CURVE_USDT",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_CURVE_Y",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_FULCRUM",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_IEARN",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_KYBER",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_OASIS",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_SMART_TOKEN",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_UNISWAP",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_DISABLE_WETH",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_KYBER_BANCOR_RESERVE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_KYBER_OASIS_RESERVE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_KYBER_UNISWAP_RESERVE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_MULTI_PATH_DAI",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_MULTI_PATH_ETH",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_MULTI_PATH_USDC",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "FLAG_ENABLE_UNISWAP_COMPOUND",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "contract IERC20", name: "asset", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "claimAsset",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { internalType: "contract IERC20", name: "fromToken", type: "address" },
      { internalType: "contract IERC20", name: "toToken", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "uint256", name: "parts", type: "uint256" },
      { internalType: "uint256", name: "featureFlags", type: "uint256" },
    ],
    name: "getExpectedReturn",
    outputs: [
      { internalType: "uint256", name: "returnAmount", type: "uint256" },
      { internalType: "uint256[]", name: "distribution", type: "uint256[]" },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "oneSplitImpl",
    outputs: [
      { internalType: "contract IOneSplit", name: "", type: "address" },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "contract IOneSplit", name: "impl", type: "address" },
    ],
    name: "setNewImpl",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "contract IERC20", name: "fromToken", type: "address" },
      { internalType: "contract IERC20", name: "toToken", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "uint256", name: "minReturn", type: "uint256" },
      { internalType: "uint256[]", name: "distribution", type: "uint256[]" },
      { internalType: "uint256", name: "featureFlags", type: "uint256" },
    ],
    name: "swap",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const ZRX_EXCHANGE_ABI = [
  {
    inputs: [{ internalType: "uint256", name: "chainId", type: "uint256" }],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bytes4", name: "id", type: "bytes4" },
      {
        indexed: false,
        internalType: "address",
        name: "assetProxy",
        type: "address",
      },
    ],
    name: "AssetProxyRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipientAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "makerAssetData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "takerAssetData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "orderSenderAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderEpoch",
        type: "uint256",
      },
    ],
    name: "CancelUpTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipientAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "makerAssetData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "takerAssetData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "makerFeeAssetData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "takerFeeAssetData",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "takerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makerAssetFilledAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerAssetFilledAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makerFeePaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerFeePaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFeePaid",
        type: "uint256",
      },
    ],
    name: "Fill",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldProtocolFeeCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedProtocolFeeCollector",
        type: "address",
      },
    ],
    name: "ProtocolFeeCollectorAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProtocolFeeMultiplier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedProtocolFeeMultiplier",
        type: "uint256",
      },
    ],
    name: "ProtocolFeeMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validatorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "SignatureValidatorApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionHash",
        type: "bytes32",
      },
    ],
    name: "TransactionExecution",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "EIP1271_MAGIC_VALUE",
    outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "EIP712_EXCHANGE_DOMAIN_HASH",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "allowedValidators",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    name: "batchCancelOrders",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "salt", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "signerAddress", type: "address" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct LibZeroExTransaction.ZeroExTransaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "batchExecuteTransactions",
    outputs: [{ internalType: "bytes[]", name: "", type: "bytes[]" }],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "takerAssetFillAmounts",
        type: "uint256[]",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "batchFillOrKillOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults[]",
        name: "fillResults",
        type: "tuple[]",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "takerAssetFillAmounts",
        type: "uint256[]",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "batchFillOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults[]",
        name: "fillResults",
        type: "tuple[]",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "takerAssetFillAmounts",
        type: "uint256[]",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "batchFillOrdersNoThrow",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults[]",
        name: "fillResults",
        type: "tuple[]",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "leftOrders",
        type: "tuple[]",
      },
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "rightOrders",
        type: "tuple[]",
      },
      { internalType: "bytes[]", name: "leftSignatures", type: "bytes[]" },
      { internalType: "bytes[]", name: "rightSignatures", type: "bytes[]" },
    ],
    name: "batchMatchOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults[]",
            name: "left",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults[]",
            name: "right",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "profitInLeftMakerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitInRightMakerAsset",
            type: "uint256",
          },
        ],
        internalType: "struct LibFillResults.BatchMatchedFillResults",
        name: "batchMatchedFillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "leftOrders",
        type: "tuple[]",
      },
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "rightOrders",
        type: "tuple[]",
      },
      { internalType: "bytes[]", name: "leftSignatures", type: "bytes[]" },
      { internalType: "bytes[]", name: "rightSignatures", type: "bytes[]" },
    ],
    name: "batchMatchOrdersWithMaximalFill",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults[]",
            name: "left",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults[]",
            name: "right",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "profitInLeftMakerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitInRightMakerAsset",
            type: "uint256",
          },
        ],
        internalType: "struct LibFillResults.BatchMatchedFillResults",
        name: "batchMatchedFillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "uint256", name: "targetOrderEpoch", type: "uint256" },
    ],
    name: "cancelOrdersUpTo",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "cancelled",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "currentContextAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "detachProtocolFeeCollector",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "salt", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "signerAddress", type: "address" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct LibZeroExTransaction.ZeroExTransaction",
        name: "transaction",
        type: "tuple",
      },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "executeTransaction",
    outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "takerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "fillOrKillOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "takerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "fillOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "filled",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ internalType: "bytes4", name: "assetProxyId", type: "bytes4" }],
    name: "getAssetProxy",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOrderInfo",
    outputs: [
      {
        components: [
          { internalType: "uint8", name: "orderStatus", type: "uint8" },
          { internalType: "bytes32", name: "orderHash", type: "bytes32" },
          {
            internalType: "uint256",
            name: "orderTakerAssetFilledAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LibOrder.OrderInfo",
        name: "orderInfo",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { internalType: "bytes32", name: "hash", type: "bytes32" },
      { internalType: "address", name: "signerAddress", type: "address" },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "isValidHashSignature",
    outputs: [{ internalType: "bool", name: "isValid", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "isValidOrderSignature",
    outputs: [{ internalType: "bool", name: "isValid", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "salt", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "gasPrice", type: "uint256" },
          { internalType: "address", name: "signerAddress", type: "address" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct LibZeroExTransaction.ZeroExTransaction",
        name: "transaction",
        type: "tuple",
      },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "isValidTransactionSignature",
    outputs: [{ internalType: "bool", name: "isValid", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "makerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "marketBuyOrdersFillOrKill",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "makerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "marketBuyOrdersNoThrow",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "takerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "marketSellOrdersFillOrKill",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "takerAssetFillAmount",
        type: "uint256",
      },
      { internalType: "bytes[]", name: "signatures", type: "bytes[]" },
    ],
    name: "marketSellOrdersNoThrow",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "makerAssetFilledAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetFilledAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "takerFeePaid", type: "uint256" },
          { internalType: "uint256", name: "protocolFeePaid", type: "uint256" },
        ],
        internalType: "struct LibFillResults.FillResults",
        name: "fillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "leftOrder",
        type: "tuple",
      },
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "rightOrder",
        type: "tuple",
      },
      { internalType: "bytes", name: "leftSignature", type: "bytes" },
      { internalType: "bytes", name: "rightSignature", type: "bytes" },
    ],
    name: "matchOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults",
            name: "left",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults",
            name: "right",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "profitInLeftMakerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitInRightMakerAsset",
            type: "uint256",
          },
        ],
        internalType: "struct LibFillResults.MatchedFillResults",
        name: "matchedFillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "leftOrder",
        type: "tuple",
      },
      {
        components: [
          { internalType: "address", name: "makerAddress", type: "address" },
          { internalType: "address", name: "takerAddress", type: "address" },
          {
            internalType: "address",
            name: "feeRecipientAddress",
            type: "address",
          },
          { internalType: "address", name: "senderAddress", type: "address" },
          {
            internalType: "uint256",
            name: "makerAssetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takerAssetAmount",
            type: "uint256",
          },
          { internalType: "uint256", name: "makerFee", type: "uint256" },
          { internalType: "uint256", name: "takerFee", type: "uint256" },
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          { internalType: "uint256", name: "salt", type: "uint256" },
          { internalType: "bytes", name: "makerAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerAssetData", type: "bytes" },
          { internalType: "bytes", name: "makerFeeAssetData", type: "bytes" },
          { internalType: "bytes", name: "takerFeeAssetData", type: "bytes" },
        ],
        internalType: "struct LibOrder.Order",
        name: "rightOrder",
        type: "tuple",
      },
      { internalType: "bytes", name: "leftSignature", type: "bytes" },
      { internalType: "bytes", name: "rightSignature", type: "bytes" },
    ],
    name: "matchOrdersWithMaximalFill",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults",
            name: "left",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "makerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerAssetFilledAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "makerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "takerFeePaid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeePaid",
                type: "uint256",
              },
            ],
            internalType: "struct LibFillResults.FillResults",
            name: "right",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "profitInLeftMakerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profitInRightMakerAsset",
            type: "uint256",
          },
        ],
        internalType: "struct LibFillResults.MatchedFillResults",
        name: "matchedFillResults",
        type: "tuple",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "orderEpoch",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ internalType: "bytes32", name: "hash", type: "bytes32" }],
    name: "preSign",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      { internalType: "bytes32", name: "", type: "bytes32" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "preSigned",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "protocolFeeCollector",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "protocolFeeMultiplier",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ internalType: "address", name: "assetProxy", type: "address" }],
    name: "registerAssetProxy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "updatedProtocolFeeCollector",
        type: "address",
      },
    ],
    name: "setProtocolFeeCollectorAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "updatedProtocolFeeMultiplier",
        type: "uint256",
      },
    ],
    name: "setProtocolFeeMultiplier",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "address", name: "validatorAddress", type: "address" },
      { internalType: "bool", name: "approval", type: "bool" },
    ],
    name: "setSignatureValidatorApproval",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { internalType: "bytes[]", name: "assetData", type: "bytes[]" },
      { internalType: "address[]", name: "fromAddresses", type: "address[]" },
      { internalType: "address[]", name: "toAddresses", type: "address[]" },
      { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
    ],
    name: "simulateDispatchTransferFromCalls",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "transactionsExecuted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
const TRADER_ABI = [
  {
    constant: false,
    inputs: [],
    name: "getWeth",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_from", type: "address" },
      { name: "_to", type: "address" },
      { name: "_amount", type: "uint256" },
      { name: "_minReturn", type: "uint256" },
      { name: "_distribution", type: "uint256[]" },
    ],
    name: "oneSplitSwap",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "SAI",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ name: "", type: "address" }],
    name: "currencies",
    outputs: [{ name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_fromToken", type: "address" },
      { name: "_toToken", type: "address" },
      { name: "_fromAmount", type: "uint256" },
      { name: "_0xData", type: "bytes" },
      { name: "_1SplitMinReturn", type: "uint256" },
      { name: "_1SplitDistribution", type: "uint256[]" },
    ],
    name: "trade",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ name: "_tokenAddress", type: "address" }],
    name: "withdrawToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "USDC",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "", type: "address" },
      {
        components: [
          { name: "owner", type: "address" },
          { name: "number", type: "uint256" },
        ],
        name: "",
        type: "tuple",
      },
      { name: "data", type: "bytes" },
    ],
    name: "callFunction",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "WETH",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [{ name: "token", type: "address" }],
    name: "tokenToMarketId",
    outputs: [{ name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_from", type: "address" },
      { name: "_amount", type: "uint256" },
      { name: "_calldataHexString", type: "bytes" },
    ],
    name: "zrxSwap",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "loan",
    outputs: [{ name: "", type: "uint256" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "flashToken", type: "address" },
      { name: "flashAmount", type: "uint256" },
      { name: "arbToken", type: "address" },
      { name: "zrxData", type: "bytes" },
      { name: "oneSplitMinReturn", type: "uint256" },
      { name: "oneSplitDistribution", type: "uint256[]" },
    ],
    name: "getFlashloan",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ name: "_amount", type: "uint256" }],
    name: "approveWeth",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_fromToken", type: "address" },
      { name: "_toToken", type: "address" },
      { name: "_fromAmount", type: "uint256" },
      { name: "_0xData", type: "bytes" },
      { name: "_1SplitMinReturn", type: "uint256" },
      { name: "_1SplitDistribution", type: "uint256[]" },
    ],
    name: "arb",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "DAI",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: true,
    stateMutability: "payable",
    type: "constructor",
  },
  { payable: true, stateMutability: "payable", type: "fallback" },
];

module.exports = {
  ERC_20_ABI,
  FILL_ORDER_ABI,
  ONE_SPLIT_ABI,
  TRADER_ABI,
  ZRX_EXCHANGE_ABI,
};
